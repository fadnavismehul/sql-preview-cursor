/* Enhanced styling for the results webview - Aiming for cleaner look */

/* Ensure HTML and Body pick up base styles */
html {
    font-family: var(--vscode-font-family);
    font-size: var(--vscode-font-size);
}

/* Base body inherits VS Code styles */
body {
    font-family: var(--vscode-font-family);
    font-size: var(--vscode-font-size);
    color: var(--vscode-editor-foreground);
    background-color: var(--vscode-editor-background);
    padding: 0; /* Remove body padding, let elements manage their own */
    margin: 0;
    overflow: hidden; /* Prevent body scrollbars, let AG Grid handle scrolling */
    display: flex;
    flex-direction: column;
    height: 100vh; /* Full viewport height */
}

/* Tab System Styles */
.tab-container {
    display: flex;
    align-items: center;
    background-color: var(--vscode-tab-border, var(--vscode-editorGroupHeader-tabsBackground));
    border-bottom: 1px solid var(--vscode-tab-border, var(--vscode-editorWidget-border));
    padding: 0;
    flex-shrink: 0;
    min-height: 32px;
}

.tab-list {
    display: flex;
    flex: 1;
    overflow-x: auto;
    overflow-y: hidden;
}

.tab {
    display: flex;
    align-items: center;
    padding: 6px 12px;
    background-color: var(--vscode-tab-inactiveBackground);
    color: var(--vscode-tab-inactiveForeground);
    border-right: 1px solid var(--vscode-tab-border);
    cursor: pointer;
    white-space: nowrap;
    min-width: 120px;
    max-width: 200px;
    position: relative;
    font-size: calc(var(--vscode-font-size) * 0.9);
}

.tab:hover {
    background-color: var(--vscode-tab-hoverBackground);
    color: var(--vscode-tab-hoverForeground);
}

.tab.active {
    background-color: var(--vscode-tab-activeBackground);
    color: var(--vscode-tab-activeForeground);
    border-bottom: 2px solid var(--vscode-tab-activeBorder, var(--vscode-focusBorder));
}

.tab-title {
    flex: 1;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-right: 4px;
}

.tab-close {
    background: none;
    border: none;
    color: var(--vscode-tab-inactiveForeground);
    cursor: pointer;
    padding: 2px;
    border-radius: 2px;
    font-size: 14px;
    line-height: 1;
    width: 16px;
    height: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.tab-close:hover {
    background-color: var(--vscode-toolbar-hoverBackground);
    color: var(--vscode-tab-activeForeground);
}

.tab.active .tab-close {
    color: var(--vscode-tab-activeForeground);
}

.new-tab-button {
    background: none;
    border: none;
    color: var(--vscode-tab-inactiveForeground);
    cursor: pointer;
    padding: 6px 8px;
    font-size: 16px;
    line-height: 1;
    border-radius: 2px;
    margin: 2px 4px;
}

.new-tab-button:hover {
    background-color: var(--vscode-toolbar-hoverBackground);
    color: var(--vscode-tab-activeForeground);
}

.tab-content-container {
    flex: 1;
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

.tab-content {
    display: none;
    flex: 1;
    flex-direction: column;
    overflow: hidden;
}

.tab-content.active {
    display: flex;
}

.no-tabs-message {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    color: var(--vscode-descriptionForeground);
    font-style: italic;
}

/* Controls area styling - now within tab content */
.controls {
    padding: 6px 12px;
    border-bottom: 1px solid var(--vscode-editorWidget-border, var(--vscode-contrastBorder, transparent));
    font-size: calc(var(--vscode-font-size) * 0.9);
    color: var(--vscode-descriptionForeground);
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-shrink: 0; /* Prevent shrinking */
    gap: 15px; /* Add gap between left/right sections */
}

.controls > div { /* Target direct children divs for flex alignment */
    display: flex;
    align-items: center;
    gap: 8px; /* Spacing within left/right sections */
}

#status-message {
    font-weight: 600;
    color: var(--vscode-editor-foreground); 
}

#row-count-info {
    /* Inherits color from .controls */
}

#truncation-warning {
    font-style: italic;
}

#export-button {
    background-color: var(--vscode-button-background);
    color: var(--vscode-button-foreground);
    border: 1px solid var(--vscode-button-border, transparent);
    padding: 2px 8px;
    font-size: calc(var(--vscode-font-size) * 0.9);
    border-radius: 2px;
    cursor: pointer;
    flex-shrink: 0; 
}

#export-button:hover {
    background-color: var(--vscode-button-hoverBackground);
}

/* Loading Indicator Styles */
.loading {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px;
    font-size: var(--vscode-font-size);
    color: var(--vscode-descriptionForeground);
    flex-grow: 1; 
}

.spinner {
    border: 3px solid var(--vscode-editorWidget-background, #252526);
    border-top: 3px solid var(--vscode-button-background, #0e639c);
    border-radius: 50%;
    width: 20px;
    height: 20px;
    animation: spin 1s linear infinite;
    margin-right: 8px;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* Error Message Styles */
.error-message {
    color: var(--vscode-errorForeground);
    background-color: var(--vscode-inputValidation-errorBackground, rgba(255, 0, 0, 0.1));
    border: 1px solid var(--vscode-inputValidation-errorBorder, red);
    border-left: 4px solid var(--vscode-errorForeground, red);
    padding: 12px 16px;
    margin: 10px; 
    border-radius: 4px;
    white-space: pre-wrap;
    word-wrap: break-word;
    flex-shrink: 0;
    font-family: var(--vscode-editor-font-family, 'Consolas', 'Courier New', monospace);
    font-size: calc(var(--vscode-font-size) * 0.9);
    line-height: 1.4;
    max-height: 300px;
    overflow-y: auto;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

/* --- AG Grid Styling --- */

/* Container for the grid - now within tab content */
.results-grid {
    width: 100%;
    flex-grow: 1; /* Allow grid to take remaining vertical space */
    /* height: 100%; AG Grid domLayout: 'normal' manages height with its own container */
}

/* AG Grid Theme Overrides - Targeting .ag-theme-quartz specifically */
.ag-theme-quartz {
    /* Core variables: Pipe VS Code theme into AG Grid variables */
    /* REMOVE --ag-font-family from here. It will be defined in theme-specific blocks. */
    --ag-font-size: var(--vscode-font-size); /* Still use VSCode's font size preference */
    
    /* Default background colors - will be overridden by theme specific rules */
    /* These might also be better scoped inside theme blocks if issues persist, but let's focus on font first. */
    --ag-background-color: var(--vscode-editor-background);
    --ag-foreground-color: var(--vscode-editor-foreground); /* General text color for grid content */
    --ag-secondary-foreground-color: var(--vscode-descriptionForeground); /* For less prominent text */
    
    /* Borders - Using more specific theme variables */
    --ag-border-color: var(--vscode-editorWidget-border, var(--vscode-contrastBorder, #454545)); /* General borders */
    --ag-secondary-border-color: var(--vscode-tree-indentGuidesStroke, var(--vscode-editorGroup-border, #585858)); /* For cell borders, panel separators */
    --ag-row-border-color: var(--vscode-editorRuler-foreground, var(--vscode-editorWidget-border, #454545)); /* Border between rows */

    /* Header */
    /* Attempting more specific header variables, fallback to editor widget if not distinct */
    --ag-header-background-color: var(--vscode-editorGroupHeader-tabsBackground, var(--vscode-editorWidget-background, #252526));
    --ag-header-foreground-color: var(--vscode-tab-activeForeground, var(--vscode-editor-foreground));
    --ag-header-height: 30px; /* Adjust as needed */
    --ag-header-cell-hover-background-color: var(--vscode-list-hoverBackground, #2a2d2e);
    --ag-header-cell-moving-background-color: var(--vscode-list-activeSelectionBackground, #094771);

    /* Rows */
    --ag-row-background-color: var(--vscode-editor-background); /* Base for all rows */
    /* Using editorWidget-background for a potentially more subtle odd row color */
    --ag-odd-row-background-color: var(--vscode-editorWidget-background, var(--vscode-editorGutter-background, #2c2c2c)); 
    --ag-row-hover-color: var(--vscode-list-hoverBackground, #2a2d2e); /* Hovered row */
    /* AG Grid uses '--ag-selected-row-background-color' and '--ag-selected-row-foreground-color' for selected rows */
    --ag-selected-row-background-color: var(--vscode-list-activeSelectionBackground, #094771);
    --ag-selected-row-foreground-color: var(--vscode-list-activeSelectionForeground, #ffffff);
    --ag-row-height: 20px; /* As per current file content */

    /* Cells */
    --ag-cell-horizontal-border: 1px solid var(--ag-secondary-border-color); /* Uses the themed secondary border */
    --ag-cell-data-changed-color: var(--vscode-editorGutter-modifiedBackground, yellow); /* For flashing cells */
    
    /* Inputs (like filters) - these seem okay, relying on VSCode input variables */
    --ag-input-background-color: var(--vscode-input-background);
    --ag-input-foreground-color: var(--vscode-input-foreground);
    --ag-input-border-color: var(--vscode-input-border);
    --ag-input-disabled-background-color: var(--vscode-input-disabledBackground, var(--vscode-input-background));
    --ag-input-disabled-foreground-color: var(--vscode-input-disabledForeground, var(--vscode-input-foreground));

    /* Pagination */
    --ag-pagination-background-color: var(--vscode-editorWidget-background, #252526);
    --ag-pagination-foreground-color: var(--vscode-descriptionForeground);
    --ag-pagination-button-background-color: var(--vscode-button-background);
    --ag-pagination-button-foreground-color: var(--vscode-button-foreground);
    --ag-pagination-button-hover-background-color: var(--vscode-button-hoverBackground);
    --ag-pagination-disabled-button-foreground-color: var(--vscode-disabledForeground);
    --ag-pagination-height: 30px;

    /* Tooltips */
    --ag-tooltip-background-color: var(--vscode-editor-hoverHighlightBackground);
    --ag-tooltip-foreground-color: var(--vscode-editor-foreground);

    /* Scrollbars (AG Grid uses its own, these might need ::-webkit-scrollbar if not applying) */
    --ag-scrollbar-width: 10px;
    --ag-scrollbar-thumb-color: var(--vscode-scrollbarSlider-background);
    --ag-scrollbar-thumb-hover-color: var(--vscode-scrollbarSlider-hoverBackground);
    --ag-scrollbar-thumb-active-color: var(--vscode-scrollbarSlider-activeBackground);
    --ag-scrollbar-track-color: transparent; /* Match editor background */

    /* Status Bar (if using AG Grid Enterprise status bar) */
    /* --ag-status-bar-background-color: var(--vscode-statusBar-background); */
    /* --ag-status-bar-foreground-color: var(--vscode-statusBar-foreground); */

    /* Icons - AG Grid uses SVG icons. Their color can be controlled via fill */
    --ag-icon-color: var(--vscode-icon-foreground);
    --ag-icon-disabled-color: var(--vscode-disabledForeground);

    /* Ensure menu icons are specifically targeted for visibility */
    --ag-header-menu-button-display: inline-block; /* Ensure the button container is shown */

    /* Range Selection */
    --ag-range-selection-border-color: var(--vscode-editor-selectionBackground);
    --ag-range-selection-background-color: var(--vscode-editor-selectionBackground);
    --ag-range-selection-background-color-2: var(--vscode-editor-selectionBackground);
    --ag-range-selection-background-color-3: var(--vscode-editor-selectionBackground);
    --ag-range-selection-background-color-4: var(--vscode-editor-selectionBackground);
     --ag-range-selection-highlight-color: var(--vscode-peekViewResult-selectionBackground);

}

/* Specific overrides if AG Grid CSS variables are not enough */
.ag-theme-quartz .ag-header {
    border-bottom: 1px solid var(--ag-border-color);
}

/* NO LONGER DEFINING --ag-font-family directly here */
/* It will be defined in theme-specific blocks */

/* Theme-specific overrides for AG Grid variables and direct styles */
body.vscode-light .ag-theme-quartz {
    /* Define font specifically for light theme */
    --ag-font-family: 'Menlo', 'Monaco', 'Consolas', 'Liberation Mono', 'Courier New', Courier, monospace;

    /* Light theme specific AG Grid colors */
    --ag-background-color: var(--vscode-editor-background) !important;
    --ag-row-background-color: var(--vscode-editor-background) !important;
    --ag-odd-row-background-color: var(--vscode-editorWidget-background, var(--vscode-editorGutter-background)) !important;
    --ag-header-background-color: var(--vscode-editorGroupHeader-tabsBackground, var(--vscode-editorWidget-background)) !important;
    --ag-header-foreground-color: var(--vscode-tab-activeForeground, var(--vscode-editor-foreground)) !important;
    --ag-foreground-color: var(--vscode-editor-foreground) !important; /* This will be used by cells */
}

body.vscode-dark .ag-theme-quartz {
    /* Define font specifically for dark theme */
    --ag-font-family: 'Menlo', 'Monaco', 'Consolas', 'Liberation Mono', 'Courier New', Courier, monospace;

    /* Re-assert dark theme background variables for AG Grid */
    --ag-background-color: var(--vscode-editor-background) !important;
    --ag-row-background-color: var(--vscode-editor-background) !important;
    --ag-odd-row-background-color: var(--vscode-editorGutter-background, var(--vscode-editorWidget-background)) !important; /* Try editorGutter first for dark */
    --ag-header-background-color: var(--vscode-editorGroupHeader-tabsBackground, var(--vscode-editorWidget-background)) !important;
    --ag-header-foreground-color: var(--vscode-tab-activeForeground, var(--vscode-editor-foreground)) !important;
    --ag-foreground-color: var(--vscode-editor-foreground) !important; /* This will be used by cells */
}

/* Apply the font and color to cells, using the theme-scoped --ag-font-family and --ag-foreground-color */
body.vscode-light .ag-theme-quartz .ag-cell,
body.vscode-light .ag-theme-quartz .ag-cell .ag-cell-value { /* Target inner span directly too */
    font-family: var(--ag-font-family) !important;
    color: var(--ag-foreground-color) !important; 
}

body.vscode-dark .ag-theme-quartz .ag-cell,
body.vscode-dark .ag-theme-quartz .ag-cell .ag-cell-value { /* Target inner span directly too */
    font-family: var(--ag-font-family) !important;
    color: var(--ag-foreground-color) !important; 
}

/* Styling for the row number column # */
.ag-theme-quartz .ag-pinned-left-cols-container .ag-cell[col-id="0"] { 
    background-color: var(--vscode-editorGutter-background, var(--vscode-editorWidget-background));
    color: var(--vscode-editorLineNumber-foreground) !important; 
    font-weight: bold;
    font-family: var(--ag-font-family) !important; /* Ensure row number also uses themed monospace font */
}

/* Ensure selected cells have explicitly set foreground for contrast */
.ag-theme-quartz .ag-row-selected .ag-cell {
    color: var(--ag-selected-row-foreground-color) !important;
}

/* Right align numeric cells (if AG Grid numericColumn type doesn't do it or for custom logic) */
.ag-theme-quartz .ag-cell.ag-right-aligned-cell {
    text-align: right;
}
.ag-theme-quartz .ag-numeric-cell { /* For type: 'numericColumn' */
    text-align: right;
}


/* Floating filter input styling */
.ag-theme-quartz .ag-floating-filter-input input {
    background-color: var(--vscode-input-background);
    color: var(--vscode-input-foreground);
    border: 1px solid var(--vscode-input-border);
    border-radius: 2px;
    padding: 2px 4px;
    font-size: calc(var(--vscode-font-size) * 0.9);
    height: calc(var(--ag-header-height) - 12px); /* Adjust based on header height & padding */
    margin-top: 2px; /* Small adjustment */
}

/* Style the row number column (#) specially if needed */
.ag-theme-quartz .ag-pinned-left-cols-container .ag-cell[col-id="0"] { /* Assuming row number is first after pinning */
    background-color: var(--vscode-editorGutter-background, var(--vscode-editorWidget-background));
    color: var(--vscode-editorLineNumber-foreground) !important; /* More specific theme variable */
    font-weight: bold;
    font-family: var(--ag-font-family) !important; /* Ensure row number also uses themed font */
}
/* Or if using valueGetter: 'node.rowIndex + 1' and it gets an auto colId like 'ag-Grid-AutoColumn-row_index' */
/* You might need to inspect the generated colId for the row number column */

/* Ensure VSCode theme variables take precedence for specific cases if needed */
body.vscode-light .ag-theme-quartz {
    --ag-odd-row-background-color: #f5f5f5; /* Lighter odd row for light themes */
}

body.vscode-dark .ag-theme-quartz {
    --ag-odd-row-background-color: var(--vscode-editorWidget-background, #2c2c2c);
}

body.vscode-high-contrast .ag-theme-quartz {
    --ag-odd-row-background-color: var(--vscode-editor-background); /* No odd/even difference */
    --ag-border-color: var(--vscode-contrastBorder);
    --ag-secondary-border-color: var(--vscode-contrastBorder);
    --ag-header-background-color: var(--vscode-editor-background);
    --ag-header-border-color: var(--vscode-contrastBorder);
    --ag-row-border-color: var(--vscode-contrastBorder);
}

body.vscode-high-contrast .ag-theme-quartz .ag-cell {
    border-right: 1px solid var(--vscode-contrastBorder);
    border-bottom: 1px solid var(--vscode-contrastBorder);
}
body.vscode-high-contrast .ag-theme-quartz .ag-header-cell {
    border-right: 1px solid var(--vscode-contrastBorder);
}

/* Ensure the grid takes up the available space if its container is flex growing */
.results-grid.ag-theme-quartz {
    height: 100%;
    width: 100%;
} 